plugins {

  // Our serializer for HTTP-stuff will be KotlinX Serialization
  id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"
}

apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.jvm'

dependencies {
  api "com.badlogicgames.ashley:ashley:$ashleyVersion"
  api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
  api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
  api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.kotcrab.vis:vis-ui:$visUiVersion"
  api "io.github.libktx:ktx-actors:$ktxVersion"
  api "io.github.libktx:ktx-ai:$ktxVersion"
  api "io.github.libktx:ktx-app:$ktxVersion"
  api "io.github.libktx:ktx-artemis:$ktxVersion"
  api "io.github.libktx:ktx-ashley:$ktxVersion"
  api "io.github.libktx:ktx-assets-async:$ktxVersion"
  api "io.github.libktx:ktx-assets:$ktxVersion"
  api "io.github.libktx:ktx-async:$ktxVersion"
  api "io.github.libktx:ktx-box2d:$ktxVersion"
  api "io.github.libktx:ktx-collections:$ktxVersion"
  api "io.github.libktx:ktx-freetype-async:$ktxVersion"
  api "io.github.libktx:ktx-freetype:$ktxVersion"
  api "io.github.libktx:ktx-graphics:$ktxVersion"
  api "io.github.libktx:ktx-i18n:$ktxVersion"
  api "io.github.libktx:ktx-inject:$ktxVersion"
  api "io.github.libktx:ktx-json:$ktxVersion"
  api "io.github.libktx:ktx-log:$ktxVersion"
  api "io.github.libktx:ktx-math:$ktxVersion"
  api "io.github.libktx:ktx-preferences:$ktxVersion"
  api "io.github.libktx:ktx-reflect:$ktxVersion"
  api "io.github.libktx:ktx-scene2d:$ktxVersion"
  api "io.github.libktx:ktx-style:$ktxVersion"
  api "io.github.libktx:ktx-tiled:$ktxVersion"
  api "io.github.libktx:ktx-vis-style:$ktxVersion"
  api "io.github.libktx:ktx-vis:$ktxVersion"
  api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"

  // BEGIN SUPABASE DEPENDENCIES
  implementation platform("io.github.jan-tennert.supabase:bom:$supabaseVersion")
  implementation 'io.github.jan-tennert.supabase:postgrest-kt' //DB Operations
  implementation 'io.github.jan-tennert.supabase:realtime-kt' // Websockets
  // We'll be using CIO as our HTTP client engine implementation, cause it supports JVM, Android, and Native, as well
  // as using websockets! https://ktor.io/docs/client-engines.html#limitations
  implementation("io.ktor:ktor-client-cio:$ktor_version")
  //END SUPABASE DEPENDENCIES



}
